#!/bin/bash

notification_id=728
topple_id=718
dursec=1
((duration=dursec*1000))

LCK=/tmp/break_pomodoro.lck
SHOW=/tmp/show_pomodoro.lck
INFO=/tmp/info_pomodoro.lck
STOP=/tmp/stop_pomodoro.lck
SWAP=/tmp/swap_pomodoro.lck
STAT=/tmp/stat_pomodoro.lck
ASKZ=/tmp/ask_pomodoro.lck
WORK_TIME=/tmp/work_pomodoro.dat
BREAK_TIME=/tmp/break_pomodoro.dat

if [ -e $LCK ]; then
	echo "$LCK exists."
else
	touch $LCK
	if cat $SWAP | grep Work
	then
		TYPE=Work
		TOTAL=$(cat $WORK_TIME)
	else
		TYPE=Break
		TOTAL=$(cat $BREAK_TIME)
	fi

	REMAIN=TOTAL
	while true; do
		if [ -e $LCK ]; then
			if [ ! -e $STOP ]; then
				REMAIN=$(($REMAIN-1))
			fi
		else
			if [ -e $INFO ]; then
				rm $INFO
			fi
			if [ -e $STOP ]; then
				rm $STOP
			fi
			dunstify -C $notification_id
			dunstify -r $topple_id -u normal -t $duration ' Pomodoro Quitted'
			break
		fi

		if [ -e $SWAP ]; then
			if cat $SWAP | grep Work
			then
				TYPE=Work
				TOTAL=$(cat $WORK_TIME)
			else
				TYPE=Break
				TOTAL=$(cat $BREAK_TIME)
			fi
			((LEN=TOTAL/60))
			dunstify -r $notification_id -h int:value:100 -u critical "$(printf " %s Time %d min." $TYPE $LEN)"
			sleep $dursec
			if [ ! -e $SHOW ]; then
				dunstify -C $notification_id
			fi
			REMAIN=TOTAL
			rm $SWAP
		fi

		((m=REMAIN/60, s=REMAIN%60, percent=REMAIN*100/TOTAL))
		echo "$(printf " $TYPE Time (%d:%02d)" $m $s)" > $INFO
		if [[ $REMAIN -ge 10 ]]; then
			LEVEL=low
		else
			if [[ $REMAIN%2 -eq 1 ]]; then
				LEVEL=normal
			else
				LEVEL=critical
			fi
		fi

		if [ -e $STOP ]; then
			LEVEL=normal
		fi

		if [ -e $SHOW ] || [ $REMAIN -le 10 -a -e $ASKZ ]; then
			dunstify -r $notification_id -h int:value:$percent -u $LEVEL "$(cat $INFO) "
		fi

		sleep 1

		if [[ $REMAIN -eq 0 ]]; then
			if [[ ! -e $STAT ]]; then
				PERD=1
				echo $PERD > $STAT
			else
				PERD=$(cat $STAT)
				PERD=$(($PERD+1))
			fi
			if [[ -e $ASKZ ]]; then
				if [ $TYPE = Work ]; then
					TYPE=Break
					TOTAL=$(cat $BREAK_TIME)
					dunstify -r $notification_id -h int:value:100 -u critical " It's Break Time!"
					if zenity \
						--question --width 360 --title "  Pomodoro - It's Break Time!" \
						--text "<span foreground='#0000cc' font='WenQuanYi Zen Hei Mono 15'>Ciao $(whoami), facciamo una pausa!\nHai completato $PERD pomodori ($(date +"%H:%M")).</span>" \
						--no-wrap --ok-label "   Sì" --cancel-label "   No"
					then
						echo $PERD > $STAT
					else
						rm $LCK
					fi
				else
					TYPE=Work
					TOTAL=$(cat $WORK_TIME)
					dunstify -r $notification_id -h int:value:100 -u critical " Continue Working!"
					if zenity \
						--question --width 360 --title "  Pomodoro - Continue Working!" \
						--text "<span foreground='#0000cc' font='WenQuanYi Zen Hei Mono 15'>Ciao $(whoami), continua a lavorare!\nEntrerai presto nella prossima ora?</span>" \
						--no-wrap --ok-label "   Sì" --cancel-label "   No"
					then
						echo $PERD > $STAT
					else
						rm $LCK
					fi
				fi
				REMAIN=TOTAL
			else
				if [ $TYPE = Work ]; then
					TYPE=Break
					TOTAL=$(cat $BREAK_TIME)
					dunstify -r $notification_id -h int:value:100 -u normal -t $duration " It's Break Time!"
					echo $PERD > $STAT
				else
					TYPE=Work
					TOTAL=$(cat $WORK_TIME)
					dunstify -r $notification_id -h int:value:100 -u low -t $duration " Continue Working!"
				fi
				REMAIN=TOTAL
				sleep $dursec
			fi
			if [ -e $LCK ]; then
				((LEN=TOTAL/60))
				dunstify -r $notification_id -h int:value:100 -u critical "$(printf " %s Time %d min." $TYPE $LEN)"
				sleep $dursec
				if [ ! -e $SHOW ]; then
					dunstify -C $notification_id
				fi
			fi
		fi
	done
fi